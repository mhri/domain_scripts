> object select_item_type python
    # 스킨, 썬크림, 에센스,크림 등 타입 추출
    import sys
    import rospy
    import csv

    def get_item_type(age, gender, skin_state, price_range, genom_skin, genom_color, genom_old, genom_vitamin):
        script_path = rospy.get_param('/dialog/script_path')
        csv_file = script_path + '/skincare_data.csv'

        with open(csv_file, 'r') as data_file:
            csv_data = csv.reader(data_file)
            row_title = csv_data.next()

            query_data = [str(genom_skin), str(genom_color), str(genom_old), str(genom_vitamin),
                        str(gender), str(age), str(skin_state), str(price_range)]

            row_data = []
            for row in csv_data:
                row_data.append(row[1:])

            genom_data = []
            for row in row_data:
                # print(row[0:4], query_data[0:4])
                if row[0:4] == query_data[0:4]:
                    genom_data.append(row)

            if len(genom_data) == 1:
                return create_item_str(genom_data[0][8:12])

            # 2개 이상인경우?, 0인 경우는 발생하지 않음.

            temp_data = []
            for row in genom_data:
                if row[4] == query_data[4]:
                    temp_data.append(row)

            if len(temp_data) == 1:
                return create_item_str(temp_data[0][8:12])

            start_index = 4
            if len(temp_data) == 0:
                # print('성별 안맞음')
                start_index = 5

            # 변수 2개
            temp_data = []
            for row in genom_data:
                if row[start_index:start_index + 2] == query_data[start_index:start_index + 2]:
                    temp_data.append(row)

            if len(temp_data) == 1:
                return create_item_str(temp_data[0][8:12])

            # 변수 3개
            temp_data = []
            for row in genom_data:
                if row[start_index:start_index + 3] == query_data[start_index:start_index + 3]:
                    temp_data.append(row)

            if len(temp_data) == 1:
                return create_item_str(temp_data[0][8:12])

            # 변수 4개
            temp_data = []
            for row in genom_data:
                if row[start_index:start_index + 4] == query_data[start_index:start_index + 4]:
                    temp_data.append(row)

            if len(temp_data) == 1:
                return create_item_str(temp_data[0][8:12])

        return "찾을수 없음"

    def create_item_str(item_list):
        ret_str = ''
        u_item_list = unicode(item_list[0], 'utf-8')
        if u_item_list != u'0':
            ret_str += '스킨, '
            rs.set_uservar('localuser', 'skin', u_item_list)

        u_item_list = unicode(item_list[1], 'utf-8')
        if u_item_list != u'0':
            ret_str += '썬크림, '
            rs.set_uservar('localuser', 'suncream', u_item_list)

        u_item_list = unicode(item_list[2], 'utf-8')
        if u_item_list != u'0':
            ret_str += '에센스, '
            rs.set_uservar('localuser', 'essense', u_item_list)

        u_item_list = unicode(item_list[3], 'utf-8')
        if u_item_list != u'0':
            ret_str += '크림, '
            rs.set_uservar('localuser', 'cream', u_item_list)
        return ret_str

    #
    age = 0 if (rs.get_uservar('localuser', 'age') == u'젋으') else 1
    gender = 0 if (rs.get_uservar('localuser', 'gender') == u'남성') else 1
    skin_state = 0 if (rs.get_uservar('localuser', 'gender') == u'건성') else 1
    price_range = 1 if (rs.get_uservar('localuser', 'gender') == u'비싼') else 0

    #
    genom_skin = ['보다 적은', '과 같은', '많은 것'].index(rs.get_uservar('localuser', 'genom_skin')) + 1
    genom_color = ['적은', '적당한', '많은'].index(rs.get_uservar('localuser', 'genom_color')) + 1
    genom_old = ['적은', '적당한', '많은'].index(rs.get_uservar('localuser', 'genom_old')) + 1
    genom_vitamin = ['나쁜', '적당한', '괜찮은'].index(rs.get_uservar('localuser', 'genom_vitamin')) + 1

    return get_item_type(age, gender, skin_state, price_range, genom_skin, genom_color, genom_old, genom_vitamin)
< object


> object get_genom_data python
    # 유전자 정보 랜덤 선택
    import sys
    import rospy
    import csv
    import random

    def get_random_genom():
        script_path = rospy.get_param('/dialog/script_path')
        csv_file = script_path + '/skincare_data.csv'

        with open(csv_file, 'r') as data_file:
            csv_data = csv.reader(data_file)
            row_title = csv_data.next()

            row_data = []
            for row in csv_data:
                row_data.append(row[1:])

            select_genom = row_data[random.randint(0, len(row_data)-1)]

            rs.set_uservar('localuser', 'genom_skin', ['보다 적은', '과 같은', '많은 것'][int(select_genom[0])-1])
            rs.set_uservar('localuser', 'genom_color', ['적은', '적당한', '많은'][int(select_genom[1])-1])
            rs.set_uservar('localuser', 'genom_old', ['적은', '적당한', '많은'][int(select_genom[2])-1])
            rs.set_uservar('localuser', 'genom_vitamin', ['나쁜', '적당한', '괜찮은'][int(select_genom[3])-1])
        return

    return get_random_genom()
< object

> object get_description_item python
    # item_list = unicode(args[0], 'utf-8')
    item_list = rs.get_uservar('localuser', args[0])
    print(item_list)

    item_list = item_list.split(',')
    if len(item_list) == 1:
        company, item = item_list[0].split(')')
        company = company.lstrip()
        company = company.lstrip('(')

        return u'%s 사의 %s 제품입니다.'%(company, item)

    ret_str = u''
    previous_company = u''
    for i in range(len(item_list) - 1):
        company, item = item_list[i].split(')')
        company = company.lstrip()
        company = company.lstrip('(')

        if previous_company != company:
            ret_str += u'%s 사의 %s, '%(company, item)
            previous_company = company
        else:
            ret_str += u'%s, '%(item)

    company, item = item_list[-1].split(')')
    company = company.lstrip()
    company = company.lstrip('(')

    if previous_company != company:
        ret_str += u'%s 사의 %s 제품이 있습니다.'%(company, item)
    else:
        ret_str += u'%s 제품이 있습니다.'%(item)

    return ret_str
< object
